<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2013 sp1 (x64) - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:n1="osdm_srs" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link n1 sps xbrldi xbrli xlink xs xsi">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-0-even" margin-left="1.52cm" margin-right="1.52cm" page-height="21cm" page-width="29.70cm" margin-top="0.76cm" margin-bottom="0.76cm">
				<fo:region-body margin-top="1.25cm" margin-bottom="1.25cm" column-count="1" column-gap="1.27cm"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.25cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-0-odd" margin-left="1.52cm" margin-right="1.52cm" page-height="21cm" page-width="29.70cm" margin-top="0.76cm" margin-bottom="0.76cm">
				<fo:region-body margin-top="1.25cm" margin-bottom="1.25cm" column-count="1" column-gap="1.27cm"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.25cm"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-0">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-0-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-0-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
			<fo:simple-page-master master-name="page-master-1-even" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-1-odd" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-1-even-first" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-1-odd-first" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-1-even-last" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-1-odd-last" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-1">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-1-even-first" odd-or-even="even" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-1-odd-first" odd-or-even="odd" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-1-even-last" odd-or-even="even" page-position="last"/>
					<fo:conditional-page-master-reference master-reference="page-master-1-odd-last" odd-or-even="odd" page-position="last"/>
					<fo:conditional-page-master-reference master-reference="page-master-1-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-1-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:declarations>
				<x:xmpmeta xmlns:x="adobe:ns:meta/">
					<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
						<rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
							<xmp:CreatorTool>Altova StyleVision Enterprise Edition 2013 sp1 (x64) (http://www.altova.com)</xmp:CreatorTool>
						</rdf:Description>
					</rdf:RDF>
				</x:xmpmeta>
			</fo:declarations>
			<fo:page-sequence force-page-count="no-force" master-reference="page-master-0" initial-page-number="auto" format="1">
				<fo:static-content flow-name="odd-page-footer">
					<fo:block-container height="1.25cm" overflow="hidden" display-align="after">
						<fo:block font-family="Tahoma" font-size="xx-small">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border-collapse="collapse" empty-cells="show" font-size="xx-small" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" width="25cm">
								<fo:table-column column-width="18cm"/>
								<fo:table-column column-width="7cm"/>
								<xsl:variable name="altova:CurrContextGrid_2" select="."/>
								<fo:table-body border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
											<fo:table-cell border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
															<xsl:text>Oracle Data Modeler</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="right">
														<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
															<xsl:text>Page: </xsl:text>
														</fo:inline>
														<fo:page-number border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed"/>
														<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
															<xsl:text> / </xsl:text>
														</fo:inline>
														<fo:page-number-citation ref-id="SV_RefID_PageTotal" border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed"/>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-footer">
					<fo:block-container height="1.25cm" overflow="hidden" display-align="after">
						<fo:block font-family="Tahoma" font-size="xx-small">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border-collapse="collapse" empty-cells="show" font-size="xx-small" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" width="25cm">
								<fo:table-column column-width="18cm"/>
								<fo:table-column column-width="7cm"/>
								<xsl:variable name="altova:CurrContextGrid_2" select="."/>
								<fo:table-body border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
											<fo:table-cell border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
															<xsl:text>Oracle Data Modeler</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="right">
														<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
															<xsl:text>Page: </xsl:text>
														</fo:inline>
														<fo:page-number border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed"/>
														<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
															<xsl:text> / </xsl:text>
														</fo:inline>
														<fo:page-number-citation ref-id="SV_RefID_PageTotal" border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed"/>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:flow flow-name="xsl-region-body">
					<fo:block font-family="Tahoma" font-size="xx-small" border-collapse="collapse" empty-cells="show" font-weight="normal" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
						<fo:block/>
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x200B;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin-right="100% - 100%" text-align="center" space-before="0" space-after="0" margin="0pt">
							<xsl:for-each select="$XML">
								<xsl:for-each select="n1:root">
									<xsl:for-each select="n1:Title">
										<xsl:variable name="value-of-template_3">
											<xsl:apply-templates/>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="contains(string($value-of-template_3),'&#x200B;')">
												<fo:block border-collapse="collapse" empty-cells="show" font-size="medium" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
													<xsl:copy-of select="$value-of-template_3"/>
												</fo:block>
											</xsl:when>
											<xsl:otherwise>
												<fo:inline border-collapse="collapse" empty-cells="show" font-size="medium" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
													<xsl:copy-of select="$value-of-template_3"/>
												</fo:inline>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</fo:block>
						<fo:block>
							<fo:leader leader-pattern="space"/>
						</fo:block>
						<xsl:for-each select="$XML">
							<fo:block>
								<fo:leader leader-pattern="space"/>
							</fo:block>
							<xsl:if test="n1:root/n1:ShowFilter = &apos;true&apos;">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" width="8cm">
									<fo:table-column column-width="4cm"/>
									<fo:table-column column-width="4cm"/>
									<xsl:variable name="altova:CurrContextGrid_4" select="."/>
									<fo:table-body border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
												<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																<xsl:text>Pattern</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<xsl:for-each select="n1:root">
																<xsl:for-each select="n1:Pattern">
																	<xsl:variable name="value-of-template_5">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_5),'&#x200B;')">
																			<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																				<xsl:copy-of select="$value-of-template_5"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																				<xsl:copy-of select="$value-of-template_5"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
												<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																<xsl:text>Filter</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<xsl:for-each select="n1:root">
																<xsl:for-each select="n1:Filter">
																	<xsl:variable name="value-of-template_6">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_6),'&#x200B;')">
																			<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																				<xsl:copy-of select="$value-of-template_6"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																				<xsl:copy-of select="$value-of-template_6"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
							</xsl:if>
							<fo:block/>
							<fo:block break-after="page">
								<fo:leader leader-pattern="space"/>
							</fo:block>
							<xsl:for-each select="n1:root">
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<xsl:if test="n1:ObjectsCollection">
									<fo:table border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" width="100%">
										<xsl:variable name="sWidth">
											<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
												<xsl:with-param name="sValue" select="n1:TW"/>
											</xsl:call-template>
										</xsl:variable>
										<xsl:if test="$sWidth != ''">
											<xsl:attribute name="width">
												<xsl:value-of select="$sWidth"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column1/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column2/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column3/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column4/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column5/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column6/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column7/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column8/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column9/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column10/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column11/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column12/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column13/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column14/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column15/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column16/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column17/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column18/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column19/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column20/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column21/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column22/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column23/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column24/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column25/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column26/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column27/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column28/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column29/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:if test="n1:ObjectsCollection/n1:Column30/n1:show = &apos;Y&apos;">
											<fo:table-column column-width="proportional-column-width(1)"/>
										</xsl:if>
										<xsl:variable name="altova:CurrContextGrid_7" select="."/>
										<fo:table-body border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="n1:ObjectsCollection">
													<fo:table-row background-color="#d9f5ff" border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
														<xsl:variable name="bColumnCondition_0x92A7130">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column1/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A7130 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column1">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_8">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_8),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_8"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_8"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A7040">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column2/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A7040 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column2">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_9">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_9),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_9"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_9"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A6F50">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column3/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A6F50 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column3">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_10">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_10),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_10"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_10"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A6500">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column4/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A6500 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column4">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_11">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_11),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_11"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_11"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A66E0">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column5/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A66E0 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column5">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_12">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_12),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_12"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_12"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A67D0">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column6/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A67D0 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column6">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_13">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_13),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_13"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_13"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A68C0">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column7/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A68C0 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column7">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_14">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_14),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_14"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_14"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A65F0">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column8/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A65F0 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column8">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_15">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_15),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_15"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_15"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A6E60">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column9/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A6E60 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column9">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_16">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_16),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_16"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_16"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A6D70">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column10/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A6D70 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column10">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_17">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_17),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_17"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_17"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A6C80">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column11/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A6C80 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column11">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_18">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_18),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_18"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_18"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A6B90">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column12/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A6B90 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column12">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_19">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_19),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_19"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_19"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A6AA0">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column13/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A6AA0 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column13">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_20">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_20),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_20"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_20"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x92A69B0">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column14/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x92A69B0 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column14">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_21">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_21),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_21"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_21"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x14871370">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column15/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x14871370 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column15">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_22">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_22),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_22"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_22"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1486E1C0">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column16/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1486E1C0 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column16">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_23">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_23),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_23"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_23"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1486E670">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column17/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1486E670 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column17">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_24">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_24),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_24"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_24"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1486E2B0">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column18/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1486E2B0 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column18">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_25">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_25),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_25"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_25"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1486E580">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column19/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1486E580 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column19">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_26">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_26),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_26"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_26"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x14871460">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column20/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x14871460 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column20">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_27">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_27),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_27"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_27"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1486F840">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column21/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1486F840 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column21">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_28">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_28),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_28"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_28"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1485BB60">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column22/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1485BB60 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column22">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_29">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_29),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_29"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_29"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1485CC40">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column23/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1485CC40 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column23">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_30">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_30),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_30"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_30"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1485AB70">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column24/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1485AB70 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column24">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_31">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_31),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_31"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_31"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1485AD50">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column25/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1485AD50 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column25">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_32">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_32),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_32"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_32"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x14870830">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column26/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x14870830 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column26">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_33">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_33),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_33"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_33"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1485AA80">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column27/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1485AA80 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column27">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_34">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_34),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_34"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_34"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1485B020">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column28/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1485B020 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column28">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_35">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_35),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_35"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_35"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1485B110">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column29/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1485B110 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column29">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_36">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_36),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_36"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_36"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
														<xsl:variable name="bColumnCondition_0x1485C3D0">
															<xsl:for-each select="$altova:CurrContextGrid_7">
																<xsl:value-of select="n1:ObjectsCollection/n1:Column30/n1:show = &apos;Y&apos;"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="$bColumnCondition_0x1485C3D0 = 'true'">
															<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="center">
																		<xsl:for-each select="n1:Column30">
																			<xsl:for-each select="n1:customName">
																				<xsl:variable name="value-of-template_37">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_37),'&#x200B;')">
																						<fo:block border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_37"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline border-collapse="collapse" empty-cells="show" font-weight="bold" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																							<xsl:copy-of select="$value-of-template_37"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</xsl:if>
													</fo:table-row>
													<xsl:for-each select="n1:ObjectDetails">
														<xsl:variable name="v_Property1_Value" select="n1:Property1"/>
														<xsl:variable name="v_Property2_Value" select="n1:Property2"/>
														<xsl:variable name="v_Property3_Value" select="n1:Property3"/>
														<xsl:variable name="v_Property4_Value" select="n1:Property4"/>
														<xsl:variable name="v_Property5_Value" select="n1:Property5"/>
														<xsl:variable name="v_Property6_Value" select="n1:Property6"/>
														<xsl:variable name="v_Property7_Value" select="n1:Property7"/>
														<xsl:variable name="v_Property8_Value" select="n1:Property8"/>
														<xsl:variable name="v_Property9_Value" select="n1:Property9"/>
														<xsl:variable name="v_Property10_Value" select="n1:Property10"/>
														<xsl:variable name="v_Property11_Value" select="n1:Property11"/>
														<xsl:variable name="v_Property12_Value" select="n1:Property12"/>
														<xsl:variable name="v_Property13_Value" select="n1:Property13"/>
														<xsl:variable name="v_Property14_Value" select="n1:Property14"/>
														<xsl:variable name="v_Property15_Value" select="n1:Property15"/>
														<xsl:variable name="v_Property16_Value" select="n1:Property16"/>
														<xsl:variable name="v_Property17_Value" select="n1:Property17"/>
														<xsl:variable name="v_Property18_Value" select="n1:Property18"/>
														<xsl:variable name="v_Property19_Value" select="n1:Property19"/>
														<xsl:variable name="v_Property20_Value" select="n1:Property20"/>
														<xsl:variable name="v_Property21_Value" select="n1:Property21"/>
														<xsl:variable name="v_Property22_Value" select="n1:Property22"/>
														<xsl:variable name="v_Property23_Value" select="n1:Property23"/>
														<xsl:variable name="v_Property24_Value" select="n1:Property24"/>
														<xsl:variable name="v_Property25_Value" select="n1:Property25"/>
														<xsl:variable name="v_Property26_Value" select="n1:Property26"/>
														<xsl:variable name="v_Property27_Value" select="n1:Property27"/>
														<xsl:variable name="v_Property28_Value" select="n1:Property28"/>
														<xsl:variable name="v_Property29_Value" select="n1:Property29"/>
														<xsl:variable name="v_Property30_Value" select="n1:Property30"/>
														<fo:table-row border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
															<xsl:variable name="bColumnCondition_0x92A7130">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column1/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A7130 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property1_Value">
																						<xsl:variable name="value-of-template_38">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_38),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_38"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_38"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length(
$v_Property1_Value
) &gt; 0">
																							<xsl:for-each select="$v_Property1_Value">
																								<xsl:variable name="value-of-template_39">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_39),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_39"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_39"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property1_Value">
																						<xsl:variable name="value-of-template_40">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_40),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_40"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_40"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property1_Value">
																						<xsl:variable name="value-of-template_41">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_41),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_41"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_41"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property1_Value">
																						<xsl:variable name="value-of-template_42">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_42),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_42"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_42"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A7040">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column2/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A7040 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property2_Value">
																						<xsl:variable name="value-of-template_43">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_43),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_43"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_43"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property2_Value) &gt; 0">
																							<xsl:for-each select="$v_Property2_Value">
																								<xsl:variable name="value-of-template_44">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_44),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_44"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_44"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property2_Value">
																						<xsl:variable name="value-of-template_45">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_45),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_45"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_45"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property2_Value">
																						<xsl:variable name="value-of-template_46">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_46),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_46"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_46"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property2_Value">
																						<xsl:variable name="value-of-template_47">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_47),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_47"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_47"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A6F50">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column3/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A6F50 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property3_Value">
																						<xsl:variable name="value-of-template_48">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_48),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_48"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_48"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property3_Value) &gt; 0">
																							<xsl:for-each select="$v_Property3_Value">
																								<xsl:variable name="value-of-template_49">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_49),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_49"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_49"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property3_Value">
																						<xsl:variable name="value-of-template_50">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_50),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_50"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_50"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property3_Value">
																						<xsl:variable name="value-of-template_51">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_51),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_51"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_51"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property3_Value">
																						<xsl:variable name="value-of-template_52">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_52),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_52"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_52"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A6500">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column4/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A6500 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property4_Value">
																						<xsl:variable name="value-of-template_53">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_53),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_53"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_53"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property4_Value) &gt; 0">
																							<xsl:for-each select="$v_Property4_Value">
																								<xsl:variable name="value-of-template_54">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_54),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_54"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_54"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property4_Value">
																						<xsl:variable name="value-of-template_55">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_55),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_55"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_55"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property4_Value">
																						<xsl:variable name="value-of-template_56">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_56),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_56"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_56"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property4_Value">
																						<xsl:variable name="value-of-template_57">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_57),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_57"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_57"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A66E0">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column5/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A66E0 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property5_Value">
																						<xsl:variable name="value-of-template_58">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_58),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_58"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_58"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property5_Value) &gt; 0">
																							<xsl:for-each select="$v_Property5_Value">
																								<xsl:variable name="value-of-template_59">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_59),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_59"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_59"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property5_Value">
																						<xsl:variable name="value-of-template_60">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_60),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_60"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_60"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property5_Value">
																						<xsl:variable name="value-of-template_61">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_61),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_61"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_61"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property5_Value">
																						<xsl:variable name="value-of-template_62">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_62),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_62"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_62"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A67D0">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column6/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A67D0 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property6_Value">
																						<xsl:variable name="value-of-template_63">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_63),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_63"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_63"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property6_Value) &gt; 0">
																							<xsl:for-each select="$v_Property6_Value">
																								<xsl:variable name="value-of-template_64">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_64),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_64"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_64"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property6_Value">
																						<xsl:variable name="value-of-template_65">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_65),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_65"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_65"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property6_Value">
																						<xsl:variable name="value-of-template_66">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_66),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_66"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_66"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property6_Value">
																						<xsl:variable name="value-of-template_67">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_67),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_67"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_67"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A68C0">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column7/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A68C0 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property7_Value">
																						<xsl:variable name="value-of-template_68">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_68),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_68"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_68"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property7_Value) &gt; 0">
																							<xsl:for-each select="$v_Property7_Value">
																								<xsl:variable name="value-of-template_69">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_69),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_69"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_69"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property7_Value">
																						<xsl:variable name="value-of-template_70">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_70),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_70"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_70"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property7_Value">
																						<xsl:variable name="value-of-template_71">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_71),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_71"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_71"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property7_Value">
																						<xsl:variable name="value-of-template_72">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_72),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_72"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_72"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A65F0">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column8/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A65F0 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property8_Value">
																						<xsl:variable name="value-of-template_73">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_73),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_73"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_73"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property8_Value) &gt; 0">
																							<xsl:for-each select="$v_Property8_Value">
																								<xsl:variable name="value-of-template_74">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_74),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_74"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_74"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property8_Value">
																						<xsl:variable name="value-of-template_75">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_75),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_75"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_75"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property8_Value">
																						<xsl:variable name="value-of-template_76">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_76),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_76"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_76"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property8_Value">
																						<xsl:variable name="value-of-template_77">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_77),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_77"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_77"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A6E60">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column9/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A6E60 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property9_Value">
																						<xsl:variable name="value-of-template_78">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_78),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_78"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_78"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property9_Value) &gt; 0">
																							<xsl:for-each select="$v_Property9_Value">
																								<xsl:variable name="value-of-template_79">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_79),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_79"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_79"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property9_Value">
																						<xsl:variable name="value-of-template_80">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_80),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_80"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_80"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property9_Value">
																						<xsl:variable name="value-of-template_81">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_81),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_81"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_81"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property9_Value">
																						<xsl:variable name="value-of-template_82">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_82),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_82"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_82"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A6D70">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column10/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A6D70 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property10_Value">
																						<xsl:variable name="value-of-template_83">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_83),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_83"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_83"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property10_Value) &gt; 0">
																							<xsl:for-each select="$v_Property10_Value">
																								<xsl:variable name="value-of-template_84">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_84),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_84"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_84"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property10_Value">
																						<xsl:variable name="value-of-template_85">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_85),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_85"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_85"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property10_Value">
																						<xsl:variable name="value-of-template_86">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_86),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_86"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_86"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property10_Value">
																						<xsl:variable name="value-of-template_87">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_87),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_87"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_87"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A6C80">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column11/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A6C80 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property11_Value">
																						<xsl:variable name="value-of-template_88">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_88),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_88"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_88"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property11_Value) &gt; 0">
																							<xsl:for-each select="$v_Property11_Value">
																								<xsl:variable name="value-of-template_89">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_89),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_89"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_89"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property11_Value">
																						<xsl:variable name="value-of-template_90">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_90),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_90"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_90"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property11_Value">
																						<xsl:variable name="value-of-template_91">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_91),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_91"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_91"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property11_Value">
																						<xsl:variable name="value-of-template_92">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_92),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_92"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_92"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A6B90">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column12/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A6B90 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property12_Value">
																						<xsl:variable name="value-of-template_93">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_93),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_93"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_93"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property12_Value) &gt; 0">
																							<xsl:for-each select="$v_Property12_Value">
																								<xsl:variable name="value-of-template_94">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_94),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_94"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_94"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property12_Value">
																						<xsl:variable name="value-of-template_95">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_95),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_95"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_95"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property12_Value">
																						<xsl:variable name="value-of-template_96">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_96),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_96"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_96"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property12_Value">
																						<xsl:variable name="value-of-template_97">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_97),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_97"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_97"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A6AA0">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column13/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A6AA0 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property13_Value">
																						<xsl:variable name="value-of-template_98">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_98),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_98"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_98"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property13_Value) &gt; 0">
																							<xsl:for-each select="$v_Property13_Value">
																								<xsl:variable name="value-of-template_99">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_99),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_99"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_99"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property13_Value">
																						<xsl:variable name="value-of-template_100">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_100),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_100"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_100"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property13_Value">
																						<xsl:variable name="value-of-template_101">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_101),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_101"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_101"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property13_Value">
																						<xsl:variable name="value-of-template_102">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_102),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_102"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_102"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x92A69B0">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column14/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x92A69B0 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property14_Value">
																						<xsl:variable name="value-of-template_103">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_103),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_103"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_103"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property14_Value) &gt; 0">
																							<xsl:for-each select="$v_Property14_Value">
																								<xsl:variable name="value-of-template_104">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_104),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_104"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_104"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property14_Value">
																						<xsl:variable name="value-of-template_105">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_105),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_105"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_105"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property14_Value">
																						<xsl:variable name="value-of-template_106">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_106),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_106"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_106"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property14_Value">
																						<xsl:variable name="value-of-template_107">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_107),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_107"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_107"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x14871370">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column15/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x14871370 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property15_Value">
																						<xsl:variable name="value-of-template_108">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_108),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_108"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_108"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property15_Value) &gt; 0">
																							<xsl:for-each select="$v_Property15_Value">
																								<xsl:variable name="value-of-template_109">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_109),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_109"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_109"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property15_Value">
																						<xsl:variable name="value-of-template_110">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_110),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_110"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_110"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property15_Value">
																						<xsl:variable name="value-of-template_111">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_111),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_111"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_111"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property15_Value">
																						<xsl:variable name="value-of-template_112">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_112),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_112"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_112"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1486E1C0">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column16/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1486E1C0 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property16_Value">
																						<xsl:variable name="value-of-template_113">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_113),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_113"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_113"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property16_Value) &gt; 0">
																							<xsl:for-each select="$v_Property16_Value">
																								<xsl:variable name="value-of-template_114">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_114),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_114"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_114"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property16_Value">
																						<xsl:variable name="value-of-template_115">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_115),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_115"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_115"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property16_Value">
																						<xsl:variable name="value-of-template_116">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_116),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_116"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_116"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property16_Value">
																						<xsl:variable name="value-of-template_117">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_117),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_117"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_117"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1486E670">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column17/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1486E670 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property17_Value">
																						<xsl:variable name="value-of-template_118">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_118),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_118"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_118"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property17_Value) &gt; 0">
																							<xsl:for-each select="$v_Property17_Value">
																								<xsl:variable name="value-of-template_119">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_119),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_119"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_119"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property17_Value">
																						<xsl:variable name="value-of-template_120">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_120),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_120"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_120"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property17_Value">
																						<xsl:variable name="value-of-template_121">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_121),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_121"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_121"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property17_Value">
																						<xsl:variable name="value-of-template_122">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_122),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_122"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_122"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1486E2B0">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column18/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1486E2B0 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property18_Value">
																						<xsl:variable name="value-of-template_123">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_123),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_123"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_123"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property18_Value) &gt; 0">
																							<xsl:for-each select="$v_Property18_Value">
																								<xsl:variable name="value-of-template_124">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_124),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_124"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_124"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property18_Value">
																						<xsl:variable name="value-of-template_125">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_125),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_125"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_125"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property18_Value">
																						<xsl:variable name="value-of-template_126">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_126),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_126"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_126"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property18_Value">
																						<xsl:variable name="value-of-template_127">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_127),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_127"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_127"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1486E580">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column19/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1486E580 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property19_Value">
																						<xsl:variable name="value-of-template_128">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_128),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_128"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_128"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property19_Value) &gt; 0">
																							<xsl:for-each select="$v_Property19_Value">
																								<xsl:variable name="value-of-template_129">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_129),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_129"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_129"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property19_Value">
																						<xsl:variable name="value-of-template_130">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_130),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_130"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_130"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property19_Value">
																						<xsl:variable name="value-of-template_131">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_131),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_131"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_131"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property19_Value">
																						<xsl:variable name="value-of-template_132">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_132),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_132"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_132"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x14871460">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column20/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x14871460 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property20_Value">
																						<xsl:variable name="value-of-template_133">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_133),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_133"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_133"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property20_Value) &gt; 0">
																							<xsl:for-each select="$v_Property20_Value">
																								<xsl:variable name="value-of-template_134">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_134),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_134"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_134"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property20_Value">
																						<xsl:variable name="value-of-template_135">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_135),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_135"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_135"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property20_Value">
																						<xsl:variable name="value-of-template_136">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_136),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_136"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_136"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property20_Value">
																						<xsl:variable name="value-of-template_137">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_137),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_137"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_137"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1486F840">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column21/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1486F840 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property21_Value">
																						<xsl:variable name="value-of-template_138">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_138),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_138"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_138"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property21_Value) &gt; 0">
																							<xsl:for-each select="$v_Property21_Value">
																								<xsl:variable name="value-of-template_139">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_139),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_139"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_139"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property21_Value">
																						<xsl:variable name="value-of-template_140">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_140),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_140"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_140"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property21_Value">
																						<xsl:variable name="value-of-template_141">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_141),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_141"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_141"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property21_Value">
																						<xsl:variable name="value-of-template_142">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_142),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_142"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_142"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1485BB60">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column22/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1485BB60 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property22_Value">
																						<xsl:variable name="value-of-template_143">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_143),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_143"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_143"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property22_Value) &gt; 0">
																							<xsl:for-each select="$v_Property22_Value">
																								<xsl:variable name="value-of-template_144">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_144),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_144"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_144"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property22_Value">
																						<xsl:variable name="value-of-template_145">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_145),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_145"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_145"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property22_Value">
																						<xsl:variable name="value-of-template_146">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_146),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_146"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_146"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property22_Value">
																						<xsl:variable name="value-of-template_147">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_147),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_147"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_147"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1485CC40">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column23/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1485CC40 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property23_Value">
																						<xsl:variable name="value-of-template_148">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_148),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_148"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_148"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property23_Value) &gt; 0">
																							<xsl:for-each select="$v_Property23_Value">
																								<xsl:variable name="value-of-template_149">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_149),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_149"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_149"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property23_Value">
																						<xsl:variable name="value-of-template_150">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_150),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_150"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_150"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property23_Value">
																						<xsl:variable name="value-of-template_151">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_151),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_151"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_151"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property23_Value">
																						<xsl:variable name="value-of-template_152">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_152),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_152"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_152"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1485AB70">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column24/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1485AB70 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property24_Value">
																						<xsl:variable name="value-of-template_153">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_153),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_153"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_153"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property24_Value) &gt; 0">
																							<xsl:for-each select="$v_Property24_Value">
																								<xsl:variable name="value-of-template_154">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_154),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_154"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_154"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property24_Value">
																						<xsl:variable name="value-of-template_155">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_155),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_155"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_155"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property24_Value">
																						<xsl:variable name="value-of-template_156">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_156),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_156"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_156"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property24_Value">
																						<xsl:variable name="value-of-template_157">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_157),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_157"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_157"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1485AD50">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column25/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1485AD50 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property25_Value">
																						<xsl:variable name="value-of-template_158">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_158),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_158"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_158"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property25_Value) &gt; 0">
																							<xsl:for-each select="$v_Property25_Value">
																								<xsl:variable name="value-of-template_159">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_159),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_159"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_159"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property25_Value">
																						<xsl:variable name="value-of-template_160">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_160),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_160"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_160"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property25_Value">
																						<xsl:variable name="value-of-template_161">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_161),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_161"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_161"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property25_Value">
																						<xsl:variable name="value-of-template_162">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_162),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_162"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_162"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x14870830">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column26/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x14870830 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property26_Value">
																						<xsl:variable name="value-of-template_163">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_163),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_163"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_163"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property26_Value) &gt; 0">
																							<xsl:for-each select="$v_Property26_Value">
																								<xsl:variable name="value-of-template_164">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_164),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_164"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_164"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property26_Value">
																						<xsl:variable name="value-of-template_165">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_165),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_165"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_165"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property26_Value">
																						<xsl:variable name="value-of-template_166">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_166),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_166"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_166"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property26_Value">
																						<xsl:variable name="value-of-template_167">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_167),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_167"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_167"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1485AA80">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column27/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1485AA80 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property27_Value">
																						<xsl:variable name="value-of-template_168">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_168),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_168"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_168"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property27_Value) &gt; 0">
																							<xsl:for-each select="$v_Property27_Value">
																								<xsl:variable name="value-of-template_169">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_169),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_169"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_169"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property27_Value">
																						<xsl:variable name="value-of-template_170">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_170),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_170"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_170"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property27_Value">
																						<xsl:variable name="value-of-template_171">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_171),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_171"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_171"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property27_Value">
																						<xsl:variable name="value-of-template_172">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_172),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_172"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_172"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1485B020">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column28/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1485B020 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property28_Value">
																						<xsl:variable name="value-of-template_173">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_173),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_173"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_173"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property28_Value) &gt; 0">
																							<xsl:for-each select="$v_Property28_Value">
																								<xsl:variable name="value-of-template_174">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_174),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_174"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_174"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property28_Value">
																						<xsl:variable name="value-of-template_175">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_175),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_175"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_175"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property28_Value">
																						<xsl:variable name="value-of-template_176">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_176),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_176"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_176"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property28_Value">
																						<xsl:variable name="value-of-template_177">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_177),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_177"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_177"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1485B110">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column29/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1485B110 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property29_Value">
																						<xsl:variable name="value-of-template_178">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_178),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_178"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_178"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property29_Value) &gt; 0">
																							<xsl:for-each select="$v_Property29_Value">
																								<xsl:variable name="value-of-template_179">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_179),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_179"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_179"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property29_Value">
																						<xsl:variable name="value-of-template_180">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_180),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_180"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_180"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property29_Value">
																						<xsl:variable name="value-of-template_181">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_181),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_181"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_181"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property29_Value">
																						<xsl:variable name="value-of-template_182">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_182),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_182"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_182"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
															<xsl:variable name="bColumnCondition_0x1485C3D0">
																<xsl:for-each select="$altova:CurrContextGrid_7">
																	<xsl:value-of select="n1:ObjectsCollection/n1:Column30/n1:show = &apos;Y&apos;"/>
																</xsl:for-each>
															</xsl:variable>
															<xsl:if test="$bColumnCondition_0x1485C3D0 = 'true'">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-collapse="collapse" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="3" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																					<xsl:for-each select="$v_Property30_Value">
																						<xsl:variable name="value-of-template_183">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_183),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_183"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_183"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																					<xsl:choose>
																						<xsl:when test="string-length($v_Property30_Value) &gt; 0">
																							<xsl:for-each select="$v_Property30_Value">
																								<xsl:variable name="value-of-template_184">
																									<xsl:choose>
																										<xsl:when test="self::*">
																											<xsl:apply-templates/>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:value-of select="."/>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_184),'&#x200B;')">
																										<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_184"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																											<xsl:copy-of select="$value-of-template_184"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																								<xsl:text>&#160;</xsl:text>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																					<xsl:for-each select="$v_Property30_Value">
																						<xsl:variable name="value-of-template_185">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_185),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_185"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_185"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																					<xsl:for-each select="$v_Property30_Value">
																						<xsl:variable name="value-of-template_186">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_186),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_186"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_186"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																					<xsl:for-each select="$v_Property30_Value">
																						<xsl:variable name="value-of-template_187">
																							<xsl:choose>
																								<xsl:when test="self::*">
																									<xsl:apply-templates/>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:value-of select="."/>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_187),'&#x200B;')">
																								<fo:block border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_187"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border-collapse="collapse" empty-cells="show" table-layout="inherit" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed">
																									<xsl:copy-of select="$value-of-template_187"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</xsl:if>
														</fo:table-row>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:for-each>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="altova:double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="altova:double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
