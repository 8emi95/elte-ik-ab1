<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2013 (x64) - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:n1="osdm_cr" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link n1 sps xbrldi xbrli xlink xs xsd xsi">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
				<meta name="generator" content="Altova StyleVision Enterprise Edition 2013 (x64) (http://www.altova.com)"/>
				<meta http-equiv="X-UA-Compatible" content="IE=7"/>
				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>
				<xsl:comment>&lt;![endif]</xsl:comment>
				<style type="text/css">@page { margin-left:2cm; margin-right:2cm; margin-top:2cm; margin-bottom:2cm } @media print { br.altova-page-break { page-break-before: always; } }</style>
			</head>
			<body style="empty-cells:show; font-family:Tahoma; font-size:xx-small; text-align:left; vertical-align:top; word-wrap:break-word; ">
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:root">
						<br/>
						<center>
							<xsl:for-each select="n1:ReportCaption">
								<span style="font-size:medium; font-weight:bold; ">
									<xsl:apply-templates/>
								</span>
							</xsl:for-each>
						</center>
						<br/>
						<br/>
						<table style="width:20cm; " border="0" cellpadding="3" cellspacing="0">
							<xsl:variable name="altova:CurrContextGrid_0" select="."/>
							<tbody>
								<tr>
									<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
										<span>
											<xsl:text>Design Name</xsl:text>
										</span>
									</td>
									<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; width:16cm; ">
										<xsl:choose>
											<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
												<xsl:for-each select="n1:DesignName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
												<xsl:choose>
													<xsl:when test="string-length(n1:DesignName) &gt; 0">
														<xsl:for-each select="n1:DesignName">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
												<xsl:for-each select="n1:DesignName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
												<xsl:for-each select="n1:DesignName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
												<xsl:for-each select="n1:DesignName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
										</xsl:choose>
									</td>
								</tr>
								<tr>
									<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
										<span>
											<xsl:text>Version Date</xsl:text>
										</span>
									</td>
									<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:16cm; ">
										<xsl:choose>
											<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
												<xsl:for-each select="n1:VersionDate">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
												<xsl:choose>
													<xsl:when test="string-length(n1:VersionDate) &gt; 0">
														<xsl:for-each select="n1:VersionDate">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
												<xsl:for-each select="n1:VersionDate">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
												<xsl:for-each select="n1:VersionDate">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
												<xsl:for-each select="n1:VersionDate">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
										</xsl:choose>
									</td>
								</tr>
								<tr>
									<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
										<span>
											<xsl:text>Version Comment</xsl:text>
										</span>
									</td>
									<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:16cm; ">
										<xsl:choose>
											<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
												<xsl:for-each select="n1:VersionComment">
													<xsl:for-each select="n1:VersionCommentDetails">
														<xsl:for-each select="n1:VersionCommentRow">
															<xsl:apply-templates/>
															<br/>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
												<xsl:choose>
													<xsl:when test="count(n1:VersionComment/n1:VersionCommentDetails/n1:VersionCommentRow) &gt; 0">
														<xsl:for-each select="n1:VersionComment">
															<xsl:for-each select="n1:VersionCommentDetails">
																<xsl:for-each select="n1:VersionCommentRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
												<xsl:choose>
													<xsl:when test="count(n1:VersionComment/n1:VersionCommentDetails/n1:VersionCommentRow) &gt; 0">
														<xsl:for-each select="n1:VersionComment">
															<xsl:for-each select="n1:VersionCommentDetails">
																<xsl:for-each select="n1:VersionCommentRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise/>
												</xsl:choose>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
												<xsl:for-each select="n1:VersionComment">
													<xsl:for-each select="n1:VersionCommentDetails">
														<xsl:for-each select="n1:VersionCommentRow">
															<xsl:apply-templates/>
															<br/>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
												<xsl:for-each select="n1:VersionComment">
													<xsl:for-each select="n1:VersionCommentDetails">
														<xsl:for-each select="n1:VersionCommentRow">
															<xsl:apply-templates/>
															<br/>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:when>
										</xsl:choose>
									</td>
								</tr>
								<tr>
									<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
										<span>
											<xsl:text>Model Name</xsl:text>
										</span>
									</td>
									<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:16cm; ">
										<xsl:choose>
											<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
												<xsl:for-each select="n1:ModelName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
												<xsl:choose>
													<xsl:when test="string-length(n1:ModelName) &gt; 0">
														<xsl:for-each select="n1:ModelName">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
												<xsl:for-each select="n1:ModelName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
												<xsl:for-each select="n1:ModelName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
											<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
												<xsl:for-each select="n1:ModelName">
													<xsl:apply-templates/>
												</xsl:for-each>
											</xsl:when>
										</xsl:choose>
									</td>
								</tr>
							</tbody>
						</table>
						<xsl:for-each select="n1:CRCollection">
							<xsl:for-each select="n1:CRDetails">
								<br/>
								<br class="altova-page-break" clear="all"/>
								<table style="width:15cm; " border="0" cellpadding="3" cellspacing="0">
									<xsl:variable name="altova:CurrContextGrid_1" select="."/>
									<tbody>
										<tr>
											<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
												<span>
													<xsl:text>Change Request Name</xsl:text>
												</span>
											</td>
											<td style="background-color:#a5e7ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; width:11cm; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<h1>
															<xsl:for-each select="n1:CRName">
																<span style="font-size:xx-small; ">
																	<xsl:apply-templates/>
																</span>
															</xsl:for-each>
														</h1>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<h1>
															<xsl:for-each select="n1:CRName">
																<span style="font-size:xx-small; ">
																	<xsl:apply-templates/>
																</span>
															</xsl:for-each>
														</h1>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<h1>
															<xsl:for-each select="n1:CRName">
																<span style="font-size:xx-small; ">
																	<xsl:apply-templates/>
																</span>
															</xsl:for-each>
														</h1>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<h1>
															<xsl:for-each select="n1:CRName">
																<span style="font-size:xx-small; ">
																	<xsl:apply-templates/>
																</span>
															</xsl:for-each>
														</h1>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<h1>
															<xsl:for-each select="n1:CRName">
																<span style="font-size:xx-small; ">
																	<xsl:apply-templates/>
																</span>
															</xsl:for-each>
														</h1>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
										<tr>
											<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
												<span>
													<xsl:text>Comment</xsl:text>
												</span>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:11cm; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:CRComment">
															<xsl:for-each select="n1:CRCommentDetails">
																<xsl:for-each select="n1:CRCommentRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="count(n1:CRComment/n1:CRCommentDetails/n1:CRCommentRow) &gt; 0">
																<xsl:for-each select="n1:CRComment">
																	<xsl:for-each select="n1:CRCommentDetails">
																		<xsl:for-each select="n1:CRCommentRow">
																			<xsl:apply-templates/>
																			<br/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:choose>
															<xsl:when test="count(n1:CRComment/n1:CRCommentDetails/n1:CRCommentRow) &gt; 0">
																<xsl:for-each select="n1:CRComment">
																	<xsl:for-each select="n1:CRCommentDetails">
																		<xsl:for-each select="n1:CRCommentRow">
																			<xsl:apply-templates/>
																			<br/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise/>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:CRComment">
															<xsl:for-each select="n1:CRCommentDetails">
																<xsl:for-each select="n1:CRCommentRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:CRComment">
															<xsl:for-each select="n1:CRCommentDetails">
																<xsl:for-each select="n1:CRCommentRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
										<tr>
											<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
												<span>
													<xsl:text>Notes</xsl:text>
												</span>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:11cm; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:CRNotes">
															<xsl:for-each select="n1:CRNotesDetails">
																<xsl:for-each select="n1:CRNoteRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="count(n1:CRNotes/n1:CRNotesDetails/n1:CRNoteRow) &gt; 0">
																<xsl:for-each select="n1:CRNotes">
																	<xsl:for-each select="n1:CRNotesDetails">
																		<xsl:for-each select="n1:CRNoteRow">
																			<xsl:apply-templates/>
																			<br/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:choose>
															<xsl:when test="count(n1:CRNotes/n1:CRNotesDetails/n1:CRNoteRow) &gt; 0">
																<xsl:for-each select="n1:CRNotes">
																	<xsl:for-each select="n1:CRNotesDetails">
																		<xsl:for-each select="n1:CRNoteRow">
																			<xsl:apply-templates/>
																			<br/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise/>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:CRNotes">
															<xsl:for-each select="n1:CRNotesDetails">
																<xsl:for-each select="n1:CRNoteRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:CRNotes">
															<xsl:for-each select="n1:CRNotesDetails">
																<xsl:for-each select="n1:CRNoteRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
										<tr>
											<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
												<span>
													<xsl:text>Reason</xsl:text>
												</span>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:11cm; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:CRReason">
															<xsl:for-each select="n1:CRReasonDetails">
																<xsl:for-each select="n1:CRReasonRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="count(n1:CRReason/n1:CRReasonDetails/n1:CRReasonRow) &gt; 0">
																<xsl:for-each select="n1:CRReason">
																	<xsl:for-each select="n1:CRReasonDetails">
																		<xsl:for-each select="n1:CRReasonRow">
																			<xsl:apply-templates/>
																			<br/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:choose>
															<xsl:when test="count(n1:CRReason/n1:CRReasonDetails/n1:CRReasonRow) &gt; 0">
																<xsl:for-each select="n1:CRReason">
																	<xsl:for-each select="n1:CRReasonDetails">
																		<xsl:for-each select="n1:CRReasonRow">
																			<xsl:apply-templates/>
																			<br/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise/>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:CRReason">
															<xsl:for-each select="n1:CRReasonDetails">
																<xsl:for-each select="n1:CRReasonRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:CRReason">
															<xsl:for-each select="n1:CRReasonDetails">
																<xsl:for-each select="n1:CRReasonRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
										<tr>
											<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
												<span>
													<xsl:text>Status</xsl:text>
												</span>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:11cm; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:CRStatus">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="string-length(n1:CRStatus) &gt; 0">
																<xsl:for-each select="n1:CRStatus">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:for-each select="n1:CRStatus">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:CRStatus">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:CRStatus">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
										<tr>
											<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
												<span>
													<xsl:text>Completed</xsl:text>
												</span>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:11cm; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:CRCompleted">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="string-length(n1:CRCompleted) &gt; 0">
																<xsl:for-each select="n1:CRCompleted">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:for-each select="n1:CRCompleted">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:CRCompleted">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:CRCompleted">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
										<tr>
											<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
												<span>
													<xsl:text>Request Date</xsl:text>
												</span>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:11cm; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:CRRequestDate">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="string-length(n1:CRRequestDate) &gt; 0">
																<xsl:for-each select="n1:CRRequestDate">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:for-each select="n1:CRRequestDate">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:CRRequestDate">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:CRRequestDate">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
										<tr>
											<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
												<span>
													<xsl:text>Completion Date</xsl:text>
												</span>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:11cm; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:CRCompletionDate">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="string-length(n1:CRCompletionDate) &gt; 0">
																<xsl:for-each select="n1:CRCompletionDate">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:for-each select="n1:CRCompletionDate">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:CRCompletionDate">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:CRCompletionDate">
															<xsl:apply-templates/>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
										<tr>
											<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
												<span>
													<xsl:text>Implementation Note</xsl:text>
												</span>
											</td>
											<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:11cm; ">
												<xsl:choose>
													<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
														<xsl:for-each select="n1:CRImplementationNote">
															<xsl:for-each select="n1:CRImplementationNoteDetails">
																<xsl:for-each select="n1:CRImplementationNoteRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
														<xsl:choose>
															<xsl:when test="count(n1:CRImplementationNote/n1:CRImplementationNoteDetails/n1:CRImplementationNoteRow) &gt; 0">
																<xsl:for-each select="n1:CRImplementationNote">
																	<xsl:for-each select="n1:CRImplementationNoteDetails">
																		<xsl:for-each select="n1:CRImplementationNoteRow">
																			<xsl:apply-templates/>
																			<br/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<span>
																	<xsl:text>&#160;</xsl:text>
																</span>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
														<xsl:choose>
															<xsl:when test="count(n1:CRImplementationNote/n1:CRImplementationNoteDetails/n1:CRImplementationNoteRow) &gt; 0">
																<xsl:for-each select="n1:CRImplementationNote">
																	<xsl:for-each select="n1:CRImplementationNoteDetails">
																		<xsl:for-each select="n1:CRImplementationNoteRow">
																			<xsl:apply-templates/>
																			<br/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise/>
														</xsl:choose>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
														<xsl:for-each select="n1:CRImplementationNote">
															<xsl:for-each select="n1:CRImplementationNoteDetails">
																<xsl:for-each select="n1:CRImplementationNoteRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
													<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
														<xsl:for-each select="n1:CRImplementationNote">
															<xsl:for-each select="n1:CRImplementationNoteDetails">
																<xsl:for-each select="n1:CRImplementationNoteRow">
																	<xsl:apply-templates/>
																	<br/>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:when>
												</xsl:choose>
											</td>
										</tr>
									</tbody>
								</table>
								<xsl:if test="count(n1:CRUsedInObjectCollection/n1:CRUsedInObjectDetails)">
									<br/>
									<span style="font-size:xx-small; font-style:italic; ">
										<xsl:text>Impacted Objects</xsl:text>
									</span>
									<table style="width:25cm; " border="0" cellpadding="3" cellspacing="0">
										<xsl:variable name="altova:CurrContextGrid_2" select="."/>
										<thead style="background-color:#d9f5ff; ">
											<tr>
												<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; text-align:center; width:8cm; ">
													<span>
														<xsl:text>Model Name</xsl:text>
													</span>
												</th>
												<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; text-align:center; width:8.5cm; ">
													<span>
														<xsl:text>Type</xsl:text>
													</span>
												</th>
												<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; text-align:center; width:8.5cm; ">
													<span>
														<xsl:text>Object Name</xsl:text>
													</span>
												</th>
											</tr>
										</thead>
										<tbody>
											<xsl:for-each select="n1:CRUsedInObjectCollection">
												<xsl:for-each select="n1:CRUsedInObjectDetails">
													<tr>
														<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; text-align:left; width:8cm; ">
															<xsl:choose>
																<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																	<xsl:for-each select="n1:ModelName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																	<xsl:choose>
																		<xsl:when test="string-length(n1:ModelName) &gt; 0">
																			<xsl:for-each select="n1:ModelName">
																				<xsl:apply-templates/>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<span>
																				<xsl:text>&#160;</xsl:text>
																			</span>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																	<xsl:for-each select="n1:ModelName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																	<xsl:for-each select="n1:ModelName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																	<xsl:for-each select="n1:ModelName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
															</xsl:choose>
														</td>
														<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:8.5cm; ">
															<xsl:choose>
																<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																	<xsl:for-each select="n1:TypeName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																	<xsl:choose>
																		<xsl:when test="string-length(n1:TypeName) &gt; 0">
																			<xsl:for-each select="n1:TypeName">
																				<xsl:apply-templates/>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<span>
																				<xsl:text>&#160;</xsl:text>
																			</span>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																	<xsl:for-each select="n1:TypeName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																	<xsl:for-each select="n1:TypeName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																	<xsl:for-each select="n1:TypeName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
															</xsl:choose>
														</td>
														<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:8.5cm; ">
															<xsl:choose>
																<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																	<xsl:for-each select="n1:ObjectName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																	<xsl:choose>
																		<xsl:when test="string-length(n1:ObjectName) &gt; 0">
																			<xsl:for-each select="n1:ObjectName">
																				<xsl:apply-templates/>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<span>
																				<xsl:text>&#160;</xsl:text>
																			</span>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																	<xsl:for-each select="n1:ObjectName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																	<xsl:for-each select="n1:ObjectName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
																<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																	<xsl:for-each select="n1:ObjectName">
																		<xsl:apply-templates/>
																	</xsl:for-each>
																</xsl:when>
															</xsl:choose>
														</td>
													</tr>
												</xsl:for-each>
											</xsl:for-each>
										</tbody>
									</table>
								</xsl:if>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
