<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2013 sp1 (x64) - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:n1="osdm_oc" xmlns:n2="osdm_ad" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link n1 n2 sps xbrldi xbrli xlink xs xsd xsi">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
				<meta name="generator" content="Altova StyleVision Enterprise Edition 2013 sp1 (x64) (http://www.altova.com)"/>
				<meta http-equiv="X-UA-Compatible" content="IE=7"/>
				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>
				<xsl:comment>&lt;![endif]</xsl:comment>
				<style type="text/css">@page { margin-left:2cm; margin-right:2cm; margin-top:2cm; margin-bottom:2cm } @media print { br.altova-page-break { page-break-before: always; } }</style>
			</head>
			<body style="empty-cells:show; font-family:Tahoma; font-size:xx-small; text-align:left; vertical-align:top; word-wrap:break-word; ">
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:root">
						<br/>
						<center>
							<xsl:for-each select="n1:ReportCaption">
								<span style="font-size:medium; font-weight:bold; ">
									<xsl:apply-templates/>
								</span>
							</xsl:for-each>
						</center>
						<br/>
						<br/>
						<xsl:if test="string-length(n1:DesignName) &gt; 0">
							<table style="width:17cm; " border="0" cellpadding="3" cellspacing="0">
								<xsl:variable name="altova:CurrContextGrid_0" select="."/>
								<tbody>
									<tr>
										<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
											<span>
												<xsl:text>Design Name</xsl:text>
											</span>
										</td>
										<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; font-size:xx-small; width:13cm; ">
											<xsl:choose>
												<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
													<xsl:for-each select="n1:DesignName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
													<xsl:choose>
														<xsl:when test="string-length(n1:DesignName) &gt; 0">
															<xsl:for-each select="n1:DesignName">
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise>
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
													<xsl:for-each select="n1:DesignName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
													<xsl:for-each select="n1:DesignName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
													<xsl:for-each select="n1:DesignName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
											</xsl:choose>
										</td>
									</tr>
									<tr>
										<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
											<span>
												<xsl:text>Source Model</xsl:text>
											</span>
										</td>
										<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:13cm; ">
											<xsl:choose>
												<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
													<xsl:for-each select="n1:SourceModelName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
													<xsl:choose>
														<xsl:when test="string-length(n1:SourceModelName) &gt; 0">
															<xsl:for-each select="n1:SourceModelName">
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise>
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
													<xsl:for-each select="n1:SourceModelName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
													<xsl:for-each select="n1:SourceModelName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
													<xsl:for-each select="n1:SourceModelName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
											</xsl:choose>
										</td>
									</tr>
									<tr>
										<td style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; font-weight:bold; width:4cm; ">
											<span>
												<xsl:text>Target Model</xsl:text>
											</span>
										</td>
										<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; font-size:xx-small; width:13cm; ">
											<xsl:choose>
												<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
													<xsl:for-each select="n1:TargetModelName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
													<xsl:choose>
														<xsl:when test="string-length(n1:TargetModelName) &gt; 0">
															<xsl:for-each select="n1:TargetModelName">
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise>
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
													<xsl:choose>
														<xsl:when test="count(n1:VersionComment/n1:VersionCommentDetails/n1:VersionCommentRow) &gt; 0">
															<xsl:for-each select="n1:TargetModelName">
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:when>
														<xsl:otherwise/>
													</xsl:choose>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
													<xsl:for-each select="n1:TargetModelName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
												<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
													<xsl:for-each select="n1:TargetModelName">
														<xsl:apply-templates/>
													</xsl:for-each>
												</xsl:when>
											</xsl:choose>
										</td>
									</tr>
								</tbody>
							</table>
						</xsl:if>
						<br/>
						<xsl:choose>
							<xsl:when test="n1:SeparateObjByStatus = &apos;Y&apos;">
								<xsl:choose>
									<xsl:when test="n1:IsDMDImport = &apos;Y&apos;">
										<xsl:if test="count(//n1:Object[@Status=&apos;Modified&apos;]) &gt; 0">
											<br/>
											<span style="font-family:Tahoma; font-size:x-small; font-style:italic; ">
												<xsl:text>Modified objects</xsl:text>
											</span>
											<table border="0" cellpadding="3" cellspacing="0">
												<xsl:variable name="altova:CurrContextGrid_1" select="."/>
												<thead style="background-color:#d9f5ff; white-space:nowrap; ">
													<tr>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
															<span>
																<xsl:text>Model Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
															<span>
																<xsl:text>Sorce Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
															<span>
																<xsl:text>Target Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:3cm; ">
															<span>
																<xsl:text>Type</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:2cm; ">
															<span>
																<xsl:text>Status</xsl:text>
															</span>
														</th>
													</tr>
												</thead>
												<tbody>
													<xsl:for-each select="n1:ObjectsCollection">
														<xsl:for-each select="n1:ObjectDetails">
															<xsl:for-each select="n1:Object[@Status = &apos;Modified&apos;]">
																<tr>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																		<xsl:for-each select="@DMDImpModelName">
																			<span>
																				<xsl:value-of select="string(.)"/>
																			</span>
																		</xsl:for-each>
																		<br/>
																	</td>
																	<td style="background-color:#ecfefa; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@SourceValue) &gt; 0">
																						<xsl:for-each select="@SourceValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@TargetValue) &gt; 0">
																						<xsl:for-each select="@TargetValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:3cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Type) &gt; 0">
																						<xsl:for-each select="@Type">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:2cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Status) &gt; 0">
																						<xsl:for-each select="@Status">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																</tr>
																<xsl:for-each select="n1:PropertiesCollection">
																	<xsl:choose>
																		<xsl:when test="count( n1:PropertyDetails ) &gt;0">
																			<tr>
																				<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; width:4cm; "/>
																				<td colspan="4" style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																					<table border="0" cellpadding="0" cellspacing="0">
																						<xsl:variable name="altova:CurrContextGrid_2" select="."/>
																						<tbody>
																							<tr>
																								<td style="width:3cm; "/>
																								<td style="width:13cm; ">
																									<table style="font-style:italic; width:12cm; " border="0" cellpadding="3" cellspacing="0">
																										<xsl:variable name="altova:CurrContextGrid_3" select="."/>
																										<tbody>
																											<tr style="height:0.01cm; ">
																												<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; width:4cm; "/>
																												<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; width:4cm; "/>
																												<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; width:4cm; "/>
																											</tr>
																											<xsl:for-each select="n1:PropertyDetails">
																												<tr>
																													<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-left-color:black; border-left-style:dotted; border-left-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; width:4cm; ">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:PropertyName">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:PropertyName) &gt; 0">
																																		<xsl:for-each select="n1:PropertyName">
																																			<xsl:apply-templates/>
																																			<br/>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<span>
																																			<xsl:text>&#160;</xsl:text>
																																		</span>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:PropertyName">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:PropertyName">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:PropertyName">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</td>
																													<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; width:4cm; ">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:PropertyOldValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:PropertyOldValue) &gt; 0">
																																		<xsl:for-each select="n1:PropertyOldValue">
																																			<xsl:apply-templates/>
																																			<br/>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<span>
																																			<xsl:text>&#160;</xsl:text>
																																		</span>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:PropertyOldValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:PropertyOldValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:PropertyOldValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</td>
																													<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; width:4cm; ">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:PropertyNewValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:PropertyNewValue) &gt; 0">
																																		<xsl:for-each select="n1:PropertyNewValue">
																																			<xsl:apply-templates/>
																																			<br/>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<span>
																																			<xsl:text>&#160;</xsl:text>
																																		</span>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:PropertyNewValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:PropertyNewValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:PropertyNewValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</td>
																												</tr>
																											</xsl:for-each>
																										</tbody>
																									</table>
																								</td>
																							</tr>
																						</tbody>
																					</table>
																				</td>
																			</tr>
																		</xsl:when>
																		<xsl:otherwise/>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</tbody>
											</table>
										</xsl:if>
										<xsl:if test="count(//n1:Object[@Status=&apos;New&apos;]) &gt; 0">
											<br/>
											<span style="font-family:Tahoma; font-size:x-small; font-style:italic; ">
												<xsl:text>New objects</xsl:text>
											</span>
											<table border="0" cellpadding="3" cellspacing="0">
												<xsl:variable name="altova:CurrContextGrid_4" select="."/>
												<thead style="background-color:#d9f5ff; white-space:nowrap; ">
													<tr>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
															<span>
																<xsl:text>Model Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
															<span>
																<xsl:text>Sorce Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
															<span>
																<xsl:text>Target Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:3cm; ">
															<span>
																<xsl:text>Type</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:2cm; ">
															<span>
																<xsl:text>Status</xsl:text>
															</span>
														</th>
													</tr>
												</thead>
												<tbody>
													<xsl:for-each select="n1:ObjectsCollection">
														<xsl:for-each select="n1:ObjectDetails">
															<xsl:for-each select="n1:Object[@Status = &apos;New&apos;]">
																<tr>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																		<xsl:for-each select="@DMDImpModelName">
																			<span>
																				<xsl:value-of select="string(.)"/>
																			</span>
																		</xsl:for-each>
																		<br/>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@SourceValue) &gt; 0">
																						<xsl:for-each select="@SourceValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@TargetValue) &gt; 0">
																						<xsl:for-each select="@TargetValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:3cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Type) &gt; 0">
																						<xsl:for-each select="@Type">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:2cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Status) &gt; 0">
																						<xsl:for-each select="@Status">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																</tr>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</tbody>
											</table>
										</xsl:if>
										<xsl:if test="count(//n1:Object[@Status=&apos;Deleted&apos;]) &gt; 0">
											<br/>
											<span style="font-family:Tahoma; font-size:x-small; font-style:italic; ">
												<xsl:text>Deleted objects</xsl:text>
											</span>
											<table border="0" cellpadding="3" cellspacing="0">
												<xsl:variable name="altova:CurrContextGrid_5" select="."/>
												<thead style="background-color:#d9f5ff; white-space:nowrap; ">
													<tr>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
															<span>
																<xsl:text>Model Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
															<span>
																<xsl:text>Sorce Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
															<span>
																<xsl:text>Target Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:3cm; ">
															<span>
																<xsl:text>Type</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:2cm; ">
															<span>
																<xsl:text>Status</xsl:text>
															</span>
														</th>
													</tr>
												</thead>
												<tbody>
													<xsl:for-each select="n1:ObjectsCollection">
														<xsl:for-each select="n1:ObjectDetails">
															<xsl:for-each select="n1:Object[@Status = &apos;Deleted&apos;]">
																<tr>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																		<xsl:for-each select="@DMDImpModelName">
																			<span>
																				<xsl:value-of select="string(.)"/>
																			</span>
																		</xsl:for-each>
																		<br/>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@SourceValue) &gt; 0">
																						<xsl:for-each select="@SourceValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@TargetValue) &gt; 0">
																						<xsl:for-each select="@TargetValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:3cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Type) &gt; 0">
																						<xsl:for-each select="@Type">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:2cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Status) &gt; 0">
																						<xsl:for-each select="@Status">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																</tr>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</tbody>
											</table>
										</xsl:if>
									</xsl:when>
									<xsl:otherwise>
										<xsl:if test="count(//n1:Object[@Status=&apos;Modified&apos;]) &gt; 0">
											<br/>
											<span style="font-family:Tahoma; font-size:x-small; font-style:italic; ">
												<xsl:text>Modified objects</xsl:text>
											</span>
											<table border="0" cellpadding="3" cellspacing="0">
												<xsl:variable name="altova:CurrContextGrid_6" select="."/>
												<thead style="background-color:#d9f5ff; white-space:nowrap; ">
													<tr>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:6cm; ">
															<span>
																<xsl:text>Sorce Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:6cm; ">
															<span>
																<xsl:text>Target Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:3cm; ">
															<span>
																<xsl:text>Type</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:2cm; ">
															<span>
																<xsl:text>Status</xsl:text>
															</span>
														</th>
													</tr>
												</thead>
												<tbody>
													<xsl:for-each select="n1:ObjectsCollection">
														<xsl:for-each select="n1:ObjectDetails">
															<xsl:for-each select="n1:Object[@Status = &apos;Modified&apos;]">
																<tr>
																	<td style="background-color:#ecfefa; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:6cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@SourceValue) &gt; 0">
																						<xsl:for-each select="@SourceValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:6cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@TargetValue) &gt; 0">
																						<xsl:for-each select="@TargetValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:3cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Type) &gt; 0">
																						<xsl:for-each select="@Type">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:2cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Status) &gt; 0">
																						<xsl:for-each select="@Status">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																</tr>
																<xsl:for-each select="n1:PropertiesCollection">
																	<xsl:choose>
																		<xsl:when test="count( n1:PropertyDetails ) &gt;0">
																			<tr>
																				<td colspan="4" style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:6cm; ">
																					<table style="font-size:xx-small; " border="0" cellpadding="0" cellspacing="0">
																						<xsl:variable name="altova:CurrContextGrid_7" select="."/>
																						<tbody>
																							<tr>
																								<td style="width:3cm; "/>
																								<td style="width:13cm; ">
																									<table style="font-style:italic; width:12cm; " border="0" cellpadding="3" cellspacing="0">
																										<xsl:variable name="altova:CurrContextGrid_8" select="."/>
																										<tbody>
																											<xsl:for-each select="n1:PropertyDetails">
																												<tr>
																													<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-left-color:black; border-left-style:dotted; border-left-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; border-top-color:black; border-top-style:dotted; border-top-width:thin; width:4cm; ">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:PropertyName">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:PropertyName) &gt; 0">
																																		<xsl:for-each select="n1:PropertyName">
																																			<xsl:apply-templates/>
																																			<br/>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<span>
																																			<xsl:text>&#160;</xsl:text>
																																		</span>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:PropertyName">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:PropertyName">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:PropertyName">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</td>
																													<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; border-top-color:black; border-top-style:dotted; border-top-width:thin; width:4cm; ">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:PropertyOldValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:PropertyOldValue) &gt; 0">
																																		<xsl:for-each select="n1:PropertyOldValue">
																																			<xsl:apply-templates/>
																																			<br/>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<span>
																																			<xsl:text>&#160;</xsl:text>
																																		</span>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:PropertyOldValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:PropertyOldValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:PropertyOldValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</td>
																													<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; border-top-color:black; border-top-style:dotted; border-top-width:thin; width:4cm; ">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:PropertyNewValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:PropertyNewValue) &gt; 0">
																																		<xsl:for-each select="n1:PropertyNewValue">
																																			<xsl:apply-templates/>
																																			<br/>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<span>
																																			<xsl:text>&#160;</xsl:text>
																																		</span>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:PropertyNewValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:PropertyNewValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:PropertyNewValue">
																																	<xsl:apply-templates/>
																																	<br/>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</td>
																												</tr>
																											</xsl:for-each>
																										</tbody>
																									</table>
																								</td>
																							</tr>
																						</tbody>
																					</table>
																				</td>
																			</tr>
																		</xsl:when>
																		<xsl:otherwise/>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</tbody>
											</table>
										</xsl:if>
										<xsl:if test="count(//n1:Object[@Status=&apos;New&apos;]) &gt; 0">
											<br/>
											<span style="font-family:Tahoma; font-size:x-small; font-style:italic; ">
												<xsl:text>New objects</xsl:text>
											</span>
											<table border="0" cellpadding="3" cellspacing="0">
												<xsl:variable name="altova:CurrContextGrid_9" select="."/>
												<thead style="background-color:#d9f5ff; white-space:nowrap; ">
													<tr>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:6cm; ">
															<span>
																<xsl:text>Sorce Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:6cm; ">
															<span>
																<xsl:text>Target Name</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:3cm; ">
															<span>
																<xsl:text>Type</xsl:text>
															</span>
														</th>
														<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:2cm; ">
															<span>
																<xsl:text>Status</xsl:text>
															</span>
														</th>
													</tr>
												</thead>
												<tbody>
													<xsl:for-each select="n1:ObjectsCollection">
														<xsl:for-each select="n1:ObjectDetails">
															<xsl:for-each select="n1:Object[@Status = &apos;New&apos;]">
																<tr>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:6cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@SourceValue) &gt; 0">
																						<xsl:for-each select="@SourceValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:6cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@TargetValue) &gt; 0">
																						<xsl:for-each select="@TargetValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:3cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Type) &gt; 0">
																						<xsl:for-each select="@Type">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:2cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Status) &gt; 0">
																						<xsl:for-each select="@Status">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																</tr>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</tbody>
											</table>
										</xsl:if>
										<xsl:if test="count(//n1:Object[@Status=&apos;Deleted&apos;]) &gt; 0">
											<br/>
											<span style="font-family:Tahoma; font-size:x-small; font-style:italic; ">
												<xsl:text>Deleted objects</xsl:text>
											</span>
											<table border="0" cellpadding="3" cellspacing="0">
												<xsl:variable name="altova:CurrContextGrid_10" select="."/>
												<thead style="white-space:nowrap; ">
													<tr>
														<th style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:6cm; ">
															<span>
																<xsl:text>Sorce Name</xsl:text>
															</span>
														</th>
														<th style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:6cm; ">
															<span>
																<xsl:text>Target Name</xsl:text>
															</span>
														</th>
														<th style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:3cm; ">
															<span>
																<xsl:text>Type</xsl:text>
															</span>
														</th>
														<th style="background-color:#d9f5ff; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:2cm; ">
															<span>
																<xsl:text>Status</xsl:text>
															</span>
														</th>
													</tr>
												</thead>
												<tbody>
													<xsl:for-each select="n1:ObjectsCollection">
														<xsl:for-each select="n1:ObjectDetails">
															<xsl:for-each select="n1:Object[@Status = &apos;Deleted&apos;]">
																<tr>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:6cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@SourceValue) &gt; 0">
																						<xsl:for-each select="@SourceValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@SourceValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:6cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@TargetValue) &gt; 0">
																						<xsl:for-each select="@TargetValue">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@TargetValue">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:3cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Type) &gt; 0">
																						<xsl:for-each select="@Type">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Type">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																	<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:2cm; ">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(@Status) &gt; 0">
																						<xsl:for-each select="@Status">
																							<span>
																								<xsl:value-of select="string(.)"/>
																							</span>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="@Status">
																					<span>
																						<xsl:value-of select="string(.)"/>
																					</span>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</td>
																</tr>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</tbody>
											</table>
										</xsl:if>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:when>
							<xsl:otherwise>
								<span style="font-size:xx-small; font-style:italic; ">
									<xsl:text>O</xsl:text>
								</span>
								<span style="font-family:Tahoma; font-size:xx-small; font-style:italic; ">
									<xsl:text>bject</xsl:text>
								</span>
								<span style="font-size:xx-small; font-style:italic; ">
									<xsl:text>s</xsl:text>
								</span>
								<xsl:choose>
									<xsl:when test="n1:IsDMDImport = &apos;Y&apos;">
										<table border="0" cellpadding="3" cellspacing="0">
											<xsl:variable name="altova:CurrContextGrid_11" select="."/>
											<thead style="background-color:#d9f5ff; white-space:nowrap; ">
												<tr>
													<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
														<span>
															<xsl:text>Model Name</xsl:text>
														</span>
													</th>
													<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
														<span>
															<xsl:text>Sorce Name</xsl:text>
														</span>
													</th>
													<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:4cm; ">
														<span>
															<xsl:text>Target Name</xsl:text>
														</span>
													</th>
													<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:3cm; ">
														<span>
															<xsl:text>Type</xsl:text>
														</span>
													</th>
													<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:2cm; ">
														<span>
															<xsl:text>Status</xsl:text>
														</span>
													</th>
												</tr>
											</thead>
											<tbody>
												<xsl:for-each select="n1:ObjectsCollection">
													<xsl:for-each select="n1:ObjectDetails">
														<xsl:for-each select="n1:Object">
															<tr>
																<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																	<xsl:for-each select="@DMDImpModelName">
																		<span>
																			<xsl:value-of select="string(.)"/>
																		</span>
																	</xsl:for-each>
																	<br/>
																</td>
																<td style="background-color:#ecfefa; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																	<xsl:choose>
																		<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																			<xsl:for-each select="@SourceValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																			<xsl:choose>
																				<xsl:when test="string-length(@SourceValue) &gt; 0">
																					<xsl:for-each select="@SourceValue">
																						<span>
																							<xsl:value-of select="string(.)"/>
																						</span>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:otherwise>
																					<span>
																						<xsl:text>&#160;</xsl:text>
																					</span>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																			<xsl:for-each select="@SourceValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																			<xsl:for-each select="@SourceValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																			<xsl:for-each select="@SourceValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																	</xsl:choose>
																</td>
																<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																	<xsl:choose>
																		<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																			<xsl:for-each select="@TargetValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																			<xsl:choose>
																				<xsl:when test="string-length(@TargetValue) &gt; 0">
																					<xsl:for-each select="@TargetValue">
																						<span>
																							<xsl:value-of select="string(.)"/>
																						</span>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:otherwise>
																					<span>
																						<xsl:text>&#160;</xsl:text>
																					</span>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																			<xsl:for-each select="@TargetValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																			<xsl:for-each select="@TargetValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																			<xsl:for-each select="@TargetValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																	</xsl:choose>
																</td>
																<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:3cm; ">
																	<xsl:choose>
																		<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																			<xsl:for-each select="@Type">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																			<xsl:choose>
																				<xsl:when test="string-length(@Type) &gt; 0">
																					<xsl:for-each select="@Type">
																						<span>
																							<xsl:value-of select="string(.)"/>
																						</span>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:otherwise>
																					<span>
																						<xsl:text>&#160;</xsl:text>
																					</span>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																			<xsl:for-each select="@Type">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																			<xsl:for-each select="@Type">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																			<xsl:for-each select="@Type">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																	</xsl:choose>
																</td>
																<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:2cm; ">
																	<xsl:choose>
																		<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																			<xsl:for-each select="@Status">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																			<xsl:choose>
																				<xsl:when test="string-length(@Status) &gt; 0">
																					<xsl:for-each select="@Status">
																						<span>
																							<xsl:value-of select="string(.)"/>
																						</span>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:otherwise>
																					<span>
																						<xsl:text>&#160;</xsl:text>
																					</span>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																			<xsl:for-each select="@Status">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																			<xsl:for-each select="@Status">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																			<xsl:for-each select="@Status">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																	</xsl:choose>
																</td>
															</tr>
															<xsl:for-each select="n1:PropertiesCollection">
																<xsl:choose>
																	<xsl:when test="count( n1:PropertyDetails ) &gt;0">
																		<tr>
																			<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; width:4cm; "/>
																			<td colspan="4" style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:4cm; ">
																				<table border="0" cellpadding="0" cellspacing="0">
																					<xsl:variable name="altova:CurrContextGrid_12" select="."/>
																					<tbody>
																						<tr>
																							<td style="width:3cm; "/>
																							<td style="width:13cm; ">
																								<table style="font-style:italic; width:12cm; " border="0" cellpadding="3" cellspacing="0">
																									<xsl:variable name="altova:CurrContextGrid_13" select="."/>
																									<tbody>
																										<tr style="height:0.01cm; ">
																											<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; width:4cm; "/>
																											<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; width:4cm; "/>
																											<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; width:4cm; "/>
																										</tr>
																										<xsl:for-each select="n1:PropertyDetails">
																											<tr>
																												<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-left-color:black; border-left-style:dotted; border-left-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; width:4cm; ">
																													<xsl:choose>
																														<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																															<xsl:for-each select="n1:PropertyName">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																															<xsl:choose>
																																<xsl:when test="string-length(n1:PropertyName) &gt; 0">
																																	<xsl:for-each select="n1:PropertyName">
																																		<xsl:apply-templates/>
																																		<br/>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:otherwise>
																																	<span>
																																		<xsl:text>&#160;</xsl:text>
																																	</span>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																															<xsl:for-each select="n1:PropertyName">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																															<xsl:for-each select="n1:PropertyName">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																															<xsl:for-each select="n1:PropertyName">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																													</xsl:choose>
																												</td>
																												<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; width:4cm; ">
																													<xsl:choose>
																														<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																															<xsl:for-each select="n1:PropertyOldValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																															<xsl:choose>
																																<xsl:when test="string-length(n1:PropertyOldValue) &gt; 0">
																																	<xsl:for-each select="n1:PropertyOldValue">
																																		<xsl:apply-templates/>
																																		<br/>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:otherwise>
																																	<span>
																																		<xsl:text>&#160;</xsl:text>
																																	</span>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																															<xsl:for-each select="n1:PropertyOldValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																															<xsl:for-each select="n1:PropertyOldValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																															<xsl:for-each select="n1:PropertyOldValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																													</xsl:choose>
																												</td>
																												<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; width:4cm; ">
																													<xsl:choose>
																														<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																															<xsl:for-each select="n1:PropertyNewValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																															<xsl:choose>
																																<xsl:when test="string-length(n1:PropertyNewValue) &gt; 0">
																																	<xsl:for-each select="n1:PropertyNewValue">
																																		<xsl:apply-templates/>
																																		<br/>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:otherwise>
																																	<span>
																																		<xsl:text>&#160;</xsl:text>
																																	</span>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																															<xsl:for-each select="n1:PropertyNewValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																															<xsl:for-each select="n1:PropertyNewValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																															<xsl:for-each select="n1:PropertyNewValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																													</xsl:choose>
																												</td>
																											</tr>
																										</xsl:for-each>
																									</tbody>
																								</table>
																							</td>
																						</tr>
																					</tbody>
																				</table>
																			</td>
																		</tr>
																	</xsl:when>
																	<xsl:otherwise/>
																</xsl:choose>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</tbody>
										</table>
									</xsl:when>
									<xsl:otherwise>
										<table border="0" cellpadding="3" cellspacing="0">
											<xsl:variable name="altova:CurrContextGrid_14" select="."/>
											<thead style="background-color:#d9f5ff; white-space:nowrap; ">
												<tr>
													<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:6cm; ">
														<span>
															<xsl:text>Sorce Name</xsl:text>
														</span>
													</th>
													<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:6cm; ">
														<span>
															<xsl:text>Target Name</xsl:text>
														</span>
													</th>
													<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:3cm; ">
														<span>
															<xsl:text>Type</xsl:text>
														</span>
													</th>
													<th style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; border-top-color:black; border-top-style:solid; border-top-width:thin; text-align:center; width:2cm; ">
														<span>
															<xsl:text>Status</xsl:text>
														</span>
													</th>
												</tr>
											</thead>
											<tbody>
												<xsl:for-each select="n1:ObjectsCollection">
													<xsl:for-each select="n1:ObjectDetails">
														<xsl:for-each select="n1:Object">
															<tr>
																<td style="background-color:#ecfefa; border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:6cm; ">
																	<xsl:choose>
																		<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																			<xsl:for-each select="@SourceValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																			<xsl:choose>
																				<xsl:when test="string-length(@SourceValue) &gt; 0">
																					<xsl:for-each select="@SourceValue">
																						<span>
																							<xsl:value-of select="string(.)"/>
																						</span>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:otherwise>
																					<span>
																						<xsl:text>&#160;</xsl:text>
																					</span>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																			<xsl:for-each select="@SourceValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																			<xsl:for-each select="@SourceValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																			<xsl:for-each select="@SourceValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																	</xsl:choose>
																</td>
																<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:6cm; ">
																	<xsl:choose>
																		<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																			<xsl:for-each select="@TargetValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																			<xsl:choose>
																				<xsl:when test="string-length(@TargetValue) &gt; 0">
																					<xsl:for-each select="@TargetValue">
																						<span>
																							<xsl:value-of select="string(.)"/>
																						</span>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:otherwise>
																					<span>
																						<xsl:text>&#160;</xsl:text>
																					</span>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																			<xsl:for-each select="@TargetValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																			<xsl:for-each select="@TargetValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																			<xsl:for-each select="@TargetValue">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																	</xsl:choose>
																</td>
																<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:3cm; ">
																	<xsl:choose>
																		<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																			<xsl:for-each select="@Type">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																			<xsl:choose>
																				<xsl:when test="string-length(@Type) &gt; 0">
																					<xsl:for-each select="@Type">
																						<span>
																							<xsl:value-of select="string(.)"/>
																						</span>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:otherwise>
																					<span>
																						<xsl:text>&#160;</xsl:text>
																					</span>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																			<xsl:for-each select="@Type">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																			<xsl:for-each select="@Type">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																			<xsl:for-each select="@Type">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																	</xsl:choose>
																</td>
																<td style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:2cm; ">
																	<xsl:choose>
																		<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																			<xsl:for-each select="@Status">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																			<xsl:choose>
																				<xsl:when test="string-length(@Status) &gt; 0">
																					<xsl:for-each select="@Status">
																						<span>
																							<xsl:value-of select="string(.)"/>
																						</span>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:otherwise>
																					<span>
																						<xsl:text>&#160;</xsl:text>
																					</span>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																			<xsl:for-each select="@Status">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																			<xsl:for-each select="@Status">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																			<xsl:for-each select="@Status">
																				<span>
																					<xsl:value-of select="string(.)"/>
																				</span>
																			</xsl:for-each>
																		</xsl:when>
																	</xsl:choose>
																</td>
															</tr>
															<xsl:for-each select="n1:PropertiesCollection">
																<xsl:choose>
																	<xsl:when test="count( n1:PropertyDetails ) &gt;0">
																		<tr>
																			<td colspan="4" style="border-bottom-color:black; border-bottom-style:solid; border-bottom-width:thin; border-left-color:black; border-left-style:solid; border-left-width:thin; border-right-color:black; border-right-style:solid; border-right-width:thin; width:6cm; ">
																				<table style="font-size:xx-small; " border="0" cellpadding="0" cellspacing="0">
																					<xsl:variable name="altova:CurrContextGrid_15" select="."/>
																					<tbody>
																						<tr>
																							<td style="width:3cm; "/>
																							<td style="width:13cm; ">
																								<table style="font-style:italic; width:12cm; " border="0" cellpadding="3" cellspacing="0">
																									<xsl:variable name="altova:CurrContextGrid_16" select="."/>
																									<tbody>
																										<xsl:for-each select="n1:PropertyDetails">
																											<tr>
																												<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-left-color:black; border-left-style:dotted; border-left-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; border-top-color:black; border-top-style:dotted; border-top-width:thin; width:4cm; ">
																													<xsl:choose>
																														<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																															<xsl:for-each select="n1:PropertyName">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																															<xsl:choose>
																																<xsl:when test="string-length(n1:PropertyName) &gt; 0">
																																	<xsl:for-each select="n1:PropertyName">
																																		<xsl:apply-templates/>
																																		<br/>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:otherwise>
																																	<span>
																																		<xsl:text>&#160;</xsl:text>
																																	</span>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																															<xsl:for-each select="n1:PropertyName">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																															<xsl:for-each select="n1:PropertyName">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																															<xsl:for-each select="n1:PropertyName">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																													</xsl:choose>
																												</td>
																												<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; border-top-color:black; border-top-style:dotted; border-top-width:thin; width:4cm; ">
																													<xsl:choose>
																														<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																															<xsl:for-each select="n1:PropertyOldValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																															<xsl:choose>
																																<xsl:when test="string-length(n1:PropertyOldValue) &gt; 0">
																																	<xsl:for-each select="n1:PropertyOldValue">
																																		<xsl:apply-templates/>
																																		<br/>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:otherwise>
																																	<span>
																																		<xsl:text>&#160;</xsl:text>
																																	</span>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																															<xsl:for-each select="n1:PropertyOldValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																															<xsl:for-each select="n1:PropertyOldValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																															<xsl:for-each select="n1:PropertyOldValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																													</xsl:choose>
																												</td>
																												<td style="border-bottom-color:black; border-bottom-style:dotted; border-bottom-width:thin; border-right-color:black; border-right-style:dotted; border-right-width:thin; border-top-color:black; border-top-style:dotted; border-top-width:thin; width:4cm; ">
																													<xsl:choose>
																														<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																															<xsl:for-each select="n1:PropertyNewValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																															<xsl:choose>
																																<xsl:when test="string-length(n1:PropertyNewValue) &gt; 0">
																																	<xsl:for-each select="n1:PropertyNewValue">
																																		<xsl:apply-templates/>
																																		<br/>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:otherwise>
																																	<span>
																																		<xsl:text>&#160;</xsl:text>
																																	</span>
																																</xsl:otherwise>
																															</xsl:choose>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																															<xsl:for-each select="n1:PropertyNewValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																															<xsl:for-each select="n1:PropertyNewValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																														<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																															<xsl:for-each select="n1:PropertyNewValue">
																																<xsl:apply-templates/>
																																<br/>
																															</xsl:for-each>
																														</xsl:when>
																													</xsl:choose>
																												</td>
																											</tr>
																										</xsl:for-each>
																									</tbody>
																								</table>
																							</td>
																						</tr>
																					</tbody>
																				</table>
																			</td>
																		</tr>
																	</xsl:when>
																	<xsl:otherwise/>
																</xsl:choose>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</tbody>
										</table>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:for-each>
				</xsl:for-each>
				<br/>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
