#-----------------------------------------------------------------------------
#
# Oracle IDE Configuration File
# Copyright 2000-2011 Oracle Corporation.
# All Rights Reserved.
#
#-----------------------------------------------------------------------------

IncludeConfFile ../../../jdeveloper/ide/bin/jdk.conf

AddJavaLibFile ../../../jdeveloper/ide/lib/ide-boot.jar

# All required Netbeans jars for running Netbinox
AddJavaLibFile  ../../../jdeveloper/netbeans/platform/lib/boot.jar
AddJavaLibFile  ../../../jdeveloper/netbeans/platform/lib/org-openide-util.jar
AddJavaLibFile  ../../../jdeveloper/netbeans/platform/lib/org-openide-util-lookup.jar
AddJavaLibFile  ../../../jdeveloper/netbeans/platform/lib/org-openide-modules.jar

# Oracle IDE boot jar
AddJavaLibFile ../../../jdeveloper/ide/lib/fcpboot.jar
SetMainClass oracle.ide.osgi.boot.OracleIdeLauncher

# System properties expected by the Netbinox-Oracle IDE bridge
AddVMOption  -Dnetbeans.home=../../../jdeveloper/netbeans/platform/
AddVMOption  -Dnetbeans.logger.console=true
AddVMOption  -Dexcluded.modules=org.eclipse.osgi
AddVMOption  -Dide.cluster.dirs=../../../jdeveloper/netbeans/fcpbridge/:../../../jdeveloper/netbeans/ide/:../../../jdeveloper/:../../../:..

#
# If you are getting the 'Low Memory Warning' Message Dialog while running
# JDeveloper, please increase the -Xmx value below from the default 800M to
# something greater, like 1024M or 1250M.  If after increasing the value,
# JDeveloper is no longer starting up because it fails to create a virtual
# machine, then please reduce the modified -Xmx value, or use a 64bit JDK
# which allows for very very large value for -Xmx.
#
AddVMOption  -Xmx800M
AddVMOption  -Xms128M

#
# Turn off verifications since the included classes are already verified
# by the compiler.  This will reduce startup time significantly.  On
# some Linux Systems, using -Xverify:none will cause a SIGABRT, if you
# get this, try removing this option.
#
AddVMOption  -Xverify:none

#
# 
# Moved to oracle.ide.osgi.LauncherUtil. 
# AddVMOption -Dosgi.configuration.area=file:../../configuration

#
# With OSGI, the LAZY (ondemand) extension loading mode is the default,
# to turn it off, use any other words, ie EAGER
#
AddVMOption  -Doracle.ide.extension.HooksProcessingMode=LAZY

#
# Other OSGi configuration options for locating bundles and boot delegation.
#
AddVMOption  -Dorg.eclipse.equinox.simpleconfigurator.configUrl=file:bundles.info
AddVMOption  -Dosgi.bundles=file:../ide/lib/oracle.ide.osgi.jar@3:start
AddVMOption  -Dosgi.bundles.defaultStartLevel=1
AddVMOption  -Dosgi.configuration.cascaded=false
AddVMOption  -Dosgi.noShutdown=true
AddVMOption  -Dorg.osgi.framework.bootdelegation=*
AddVMOption  -Dosgi.parentClassloader=app

#
# Needed for PL/SQL debugging
#
AddVMOption  -Xbootclasspath/p:../../../jdeveloper/rdbms/jlib/ojdi.jar

# Needed to avoid possible deadlocks due to Eclipse bug 121737, which in turn is tied to Sun bug 4670071
AddVMOption   -Dosgi.classloader.singleThreadLoads=true

# Needed for performance as the default bundle file limit is 100
AddVMOption   -Dosgi.bundlefile.limit=500

# Make sure the XDK DocumentBuilderFactory is the one used, not Xerces
AddJavaLibFile  ../../../oracle_common/modules/oracle.nlsrtl_11.2.0/orai18n-collation.jar
AddJavaLibFile  ../../../oracle_common/modules/oracle.nlsrtl_11.2.0/orai18n-mapping.jar
AddJavaLibFile  ../../../oracle_common/modules/oracle.nlsrtl_11.2.0/orai18n-servlet.jar
AddJavaLibFile  ../../../oracle_common/modules/oracle.nlsrtl_11.2.0/orai18n-utility.jar
AddJavaLibFile  ../../../oracle_common/modules/oracle.nlsrtl_11.2.0/orai18n.jar
AddJavaLibFile  ../../modules/oracle.xdk_12.1.2/xmlparserv2.jar

AddVMOption -Djavax.xml.parsers.DocumentBuilderFactory=oracle.xml.jaxp.JXDocumentBuilderFactory
AddVMOption -Djavax.xml.parsers.SAXParserFactory=oracle.xml.jaxp.JXSAXParserFactory
AddVMOption -Dorg.xml.sax.driver=oracle.xml.parser.v2.SAXParser

# Configure location of feedback server (Oracle internal use only)
AddVMOption -Dide.feedback-server=ide.us.oracle.com

# For the transformation factory we take a slightly different tack as we need to be able to 
# switch the transformation factory in certain cases
#

AddJavaLibFile ../../../jdeveloper/ide/lib/xml-factory.jar
AddVMOption -Djavax.xml.transform.TransformerFactory=oracle.ide.xml.switchable.SwitchableTransformerFactory

# Override the JDK or XDK XML Transformer used by the SwitchableTransformerFactory
# AddVMOption -Doracle.ide.xml.SwitchableTransformer.jdk=...


# Pull parser configurations 
AddJavaLibFile  ../../../jdeveloper/ide/lib/woodstox-core-asl-4.1.1.jar
AddJavaLibFile  ../../../jdeveloper/ide/lib/stax2-api-3.1.1.jar
AddVMOption -Djavax.xml.stream.XMLInputFactory=com.ctc.wstx.stax.WstxInputFactory
AddVMOption -Djavax.xml.stream.util.XMLEventAllocator=oracle.ideimpl.xml.stream.XMLEventAllocatorImpl

# Comment out to enable the new windowing system.
#AddVMOption -Djdev.disable.modules=org.netbeans.core.windows
#AddVMOption -Dnetbeans.security.nocheck=true

# Enable logging of violations of Swings single threaded rule. Valid arguments: bug,console
AddVMOption -Doracle.ide.reportEDTViolations=console
